
1. ヨギ・ベア
ヨギベアは、イエローストーン国立公園の森にあるピクニックバスケットをすべて集めようとしている。この公園には山や木があり、ヨギにとっては障害物です。
 障害物のほかにもレンジャーがいて、ヨギがバスケットを集めるのを難しくしています。レンジャーは公園内を水平または垂直にしか移動できません。レンジャーがヨギに近づきすぎると（1ユニットの距離）、ヨギはライフを1つ失います。(ユニットの定義はあなた次第ですが、少なくともヨギのスプライトと同じ幅が必要です)。ヨギのライフが元の3つからまだ1つ以上残っている場合、ヨギは公園の入り口にスポーンします。
ヨギの冒険の間、ゲームはヨギが集めたピクニックバスケットの数を数えます。バスケットがすべて集まったら、新しいゲームレベルをロードするか、生成します。Yogiがライフをすべて失ったら、ポップアップメッセージボックスを表示し、プレイヤーが自分の名前を入力してデータベースに保存できるようにします。ベストスコア10のプレイヤーのハイスコア表を表示するメニュー項目を作成する。また、ゲームをリスタートさせるメニュー項目を作る。

common  requirements
プログラムはユーザーフレンドリーで使いやすいものでなければなりません。オブジェクト指向の実装をしなければなりませんが、多層アーキテクチャ（MV、MVCなど）を使う必要はありません。
 ゲームの表示にはシンプルなグラフィックを使うこと。プレイヤーのキャラクターの "スプライト "は、よく知られているWASDキーボードのボタンで動かせるようにする。また、マウスイベントハンドラをゲームの他の機能に実装することもできます。
 ゲームレベルをアルゴリズムで生成することも、単にファイルからロードすることもできます。ファイルからレベルをロードする場合、それぞれを異なるファイルに入れる必要があり、 少なくとも10個の定義済みレベルを作成する必要があります。レベルを生成する場合は、レベルがプレイ可能であるように注意する（プレイヤーはそれを解くことができるはずです）。
 各ゲームにはタイマーが必要で、ゲームレベルの開始からの経過時間をカウントする。
 ドキュメントには、タスクの説明、その分析、プログラムの構造（UMLクラス図）、実装の章（プログラムの最も興味深いアルゴリズム（レベルを生成するものなど）などを記述する）を含める。また、イベントとそのハンドラのつながりを示すことも忘れないでください。
 タスク記述には最小限の要求事項を含めるべきである。ゲームに新しい機能を追加するのは自由です。